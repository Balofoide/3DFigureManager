import { Button, VerticalBox, TextEdit, LineEdit,TabWidget, GridBox, HorizontalBox} from "std-widgets.slint";


export component  InputField {
    width: 300px;
    height: 60px;
    in property <string> text;
    in-out property <string> input; 

    HorizontalBox {
        
        
        t :=Text{
            horizontal-alignment: left;
            vertical-alignment: center;
            text: text; 
        }
    
        LineEdit {
            horizontal-alignment: left;
            min-width: 100px;
            min-height: 20px;

            text: root.input; 
            changed text => {root.input = self.text }
    
        } 
    }
   

}
 
export component SideButton {
    in property <string> texto;

    callback clicked;

    width: 100px;
    height: 40px;

    
    Rectangle {
        background: white;
        border-radius: 10px;
        drop-shadow-offset-y: 5px;
        drop-shadow-color: black;
        drop-shadow-blur: 10px;

        
        
        Text {
            text: root.texto;
            color: black;
            horizontal-alignment: center;
            vertical-alignment: center;
        }

        TouchArea {
            clicked => {
                root.clicked();
            }
        }
    }


}


export component AppWindow inherits Window {
    in-out property <string> filamento;
    in-out property <string> material;
    in-out property <string> tempo;
    in-out property <string> watts;
    in-out property <string> energia;
    in-out property <string> lucro;
    in-out property <float> total;

    callback request-increase-value();
    height: 720px;
    width: 1250px;

    HorizontalLayout {


        Rectangle {
            background: lightgrey;
            border-radius: 10px;
            HorizontalBox {
                Rectangle {
                    width: 20%;
                    background: lightsalmon;
                    // border-radius: 20px;




                    HorizontalLayout {
                        alignment: center;
                        VerticalBox {
                            alignment: center;
                          SideButton {
                           texto: "Tela 1";
                            
                           clicked => {
                                Tela1.visible = true;
                                Tela2.visible = false;
                           }
                          }
                          SideButton {
                            texto: "Tela 2";

                            clicked => {
                                Tela1.visible = false;
                                Tela2.visible = true;

                           }
                           }
                           SideButton {
                            texto: "Teste";
                           }
                           SideButton {
                            texto: "Teste";
                           }
                            
    
                        }
                    }
                    
                }
                Rectangle {
                    
                    // background: lightsteelblue;
                     

                    Tela1 := Rectangle {
                        visible: true;
                        // background: lightpink;
                        // border-radius: 10px;        
                        HorizontalBox {

                            Rectangle {
                                background: black;
                                width: 40%;
                                border-radius: 20px;
                                VerticalBox {
                                    padding-left: 50px;
                                    alignment: center;
 
                                    Filamento := InputField{

                                        text: "PreÃ§o do filamento [R$]:";
                                        input: root.filamento;
                                        changed input => { root.filamento = self.input; }    
                                       }
                                
                                       Material := InputField{
    
                                        text: "Gasto de Material [g]:";
                                        input: root.material;
                                        changed input => { root.material = self.input; } 
                                       }
                                       Tempo := InputField{
    
                                        text: "Tempo [H]:";
                                        input: root.tempo;
                                        changed input => { root.tempo = self.input; } 
                                       }

                                       Watts := InputField{

                                        text: "Watts [W]";
                                        input: root.watts;
                                        changed input => { root.watts = self.input; } 
                                       }

                                       Energia := InputField{
                                        text: "Taxa de Energia [R$]:";
                                        input: root.energia;
                                        changed input => { root.energia = self.input; } 
                                       }

                                       Lucro := InputField{
                                        text: "Lucro [%]:";
                                        input: root.lucro;
                                        changed input => { root.lucro = self.input; } 
                                       }


                                       Text {
                                        text: "Total: \{root.total}";
                                        
                                    }

                                    Button {
                                        
                                        width: 100px;
                                        text: "Calcular";
                                        clicked => {
                                            root.request-increase-value();
 
                                        }
                                        
                                    }
                                }
                                
                            }

                            Rectangle {
                                background: black;
                                
                                border-radius: 20px;
                            }
                        }
                        
                        
                        
                                    
                     

                    }

                    Tela2 := Rectangle {
                        visible: false;
                        background: blue;

                    }
                
                }
            }
        
        
        
        }
    
    }






}