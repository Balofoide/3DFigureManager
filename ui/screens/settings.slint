import { Theme } from "../styling.slint";
import { Container, SideButton, InputField, OverviewCard, BaloButton, CustomComboBox } from "../components.slint";
import {
    Button, ComboBox, LineEdit,
    VerticalBox, HorizontalBox, GridBox, ListView, TabWidget
} from "std-widgets.slint";

import { Database, Impressoras, Estoque-Database } from "../shared.slint";



export component settings_screen {

    in-out property <string> settings_energia;
    in-out property <string> settings_lucro;
    in-out property <string> tema : "Light";

    callback registrar_settings();
    callback dashboard();
    callback carregar_tema();
    Rectangle {
        background:Theme.background;
        width: parent.width;
        height: parent.height;
        settings_screen := VerticalBox {
        
            // alignment: center;
            HorizontalBox {
     
                    
                    
                     
                    VerticalLayout {
                        spacing: Theme.spacing;
                        padding: Theme.spacing;
                        
                        HorizontalLayout {
    
                            height: 5%;
                            // width: 5%;
                            spacing: Theme.spacing;
                            padding: Theme.spacing;
                            Text {
                                height: 10%;
                                text: "Configurações";
                                color: Theme.onBackground;
                                font-size: 40px;
                                font-weight: 800;
                            }
                            BaloButton {texto: "Voltar";clicked => {dashboard();}}
                            BaloButton {texto: "Confirmar";clicked => {registrar_settings(); dashboard();}}
                             
     
                        }
                        Container {
                            padding: Theme.spacing;
                            
                            cor: Theme.surface;
                             VerticalBox {
                                GridBox {
                                
                                    spacing: Theme.spacing;
                                    padding: Theme.spacing;
                                    height: 20%;
                                    Row {
                                        InputField {
                                            input <=> settings_energia;
                                            texto: "Taxa de Energia";
                                        }
                
                                        InputField {
                                            texto: "Lucro padrão:";
                                            input <=> settings_lucro;
                                        }

                                        // VerticalLayout {
                                        //     alignment: center;
                                        //     spacing: Theme.spacing;
                                        //     Text {
                                        //         text: "Theme";
                                        //     color: Theme.onBackground;
                                        //     font-size: Theme.fontSizeBody;
                                        // }
                                          
                                       
                                        // }
                                    }         
                                    Row {
                                        CustomComboBox {
                                            model: ["Light","Dark","TealSunsetLight","TealSunsetDark","PastelDreamLight","PastelDreamDark"];
                                            texto: "Tema";
                                            current-value: tema;
                                            selected (current-value) => {
                                                tema = current-value;
                                                	carregar_tema();
                                            }
                                        
                                        }
                                           
                                    }                                 
                                }
                             }
                        }                        
                    }
                }
            }
        }
}
   

